version: '3.8'

services:
  rediscachingwebapi:
    build:
      context: ./RedisCachingWebApi
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - redis
      - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RedisConnection=redis:6379
      - ConnectionStrings__Employee=Server=sqlserver;Database=Employee;User=sa;Password=YourPassword123!

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourPassword123!
      - MSSQL_TCP_PORT=1433  # Ensure SQL Server is listening on port 1433
      - MSSQL_FORCE_ENCRYPTION=0  # Disable forced encryption
    ports:
      - "1433:1433"  # SQL Server default port
    volumes:
      - ./RedisCachingWebApi/sql-scripts:/var/opt/mssql/scripts  # Mount SQL scripts into container
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P YourPassword123! -Q 'SELECT 1'"]  # Use 'sqlserver' here
      interval: 30s
      timeout: 10s
      retries: 10  # Increase retries to ensure SQL Server is fully initialized


  sql-init:
      image: mcr.microsoft.com/mssql-tools
      depends_on:
        - sqlserver
      environment:
        - SA_PASSWORD=YourPassword123!
      volumes:
        - ./RedisCachingWebApi/sql-scripts:/var/opt/mssql/scripts
      entrypoint: >
        /bin/bash -c "/var/opt/mssql/scripts/setup-database.sh"

volumes:
  sqlserver-data:
